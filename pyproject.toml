[tool.poetry]
name = "versifier"
version = "0.0.3"
description = "Versifier: A lyrical tool to transform Python requirements into Poetry configurations, effortlessly and elegantly."
authors = ["MrLYC <fx@m.mrlyc.com>"]
repository = "https://github.com/mrlyc/versifier"
documentation = "https://mrlyc.github.io/versifier/"
readme = "README.md"
packages = [{ include = "versifier" }]

[tool.poetry.dependencies]
python = ">=3.6.2,<4.0"
click = "8.0.3"
dataclasses = { version = "0.8", python = "<3.7" }
pip-requirements-parser = "^32.0.1"
tomli = "^1.2.3"

[[tool.poetry.source]]
name = "tencent"
url = "https://mirrors.cloud.tencent.com/pypi/simple"
default = true

[tool.poetry.scripts]
versifier = "versifier.__main__:cli"

[tool.poetry.dev-dependencies]
mypy = "0.971"
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.versifier]
private_packages = ["click", "pyparsing", "ycyc"]

[tool.mypy]
files = ["versifier"]
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
select = [
  # flake8-2020
  "YTT",
  # flake8-bandit
  "S",
  # flake8-bugbear
  "B",
  # flake8-builtins
  "A",
  # flake8-comprehensions
  "C4",
  # flake8-debugger
  "T10",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pygrep-hooks
  "PGH",
  # pyupgrade
  "UP",
  # ruff
  "RUF",
  # tryceratops
  "TRY",
]
ignore = [
  # LineTooLong
  "E501",
  # DoNotAssignLambda
  "E731",
]

[tool.ruff.format]
preview = true


[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
